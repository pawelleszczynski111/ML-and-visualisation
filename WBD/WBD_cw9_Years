{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1PYN3YDDozO7Q1AIsueN8eneGzJQEXVcm","timestamp":1713363795196}],"authorship_tag":"ABX9TyM/rnJ5CZSf9Nat+PwgdPq6"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":54,"metadata":{"id":"mvRj5b4aW0vL","executionInfo":{"status":"ok","timestamp":1713364579558,"user_tz":-120,"elapsed":13,"user":{"displayName":"Paweł Leszczyński","userId":"09579002163402024035"}}},"outputs":[],"source":["import numpy as np\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","from sklearn.model_selection import train_test_split\n","from sklearn.naive_bayes import GaussianNB\n","from sklearn.metrics import confusion_matrix\n","from sklearn.metrics import accuracy_score"]},{"cell_type":"markdown","source":[],"metadata":{"id":"jcE0552leP7n"}},{"cell_type":"code","source":["df=pd.read_csv('VLagun_Phys_Years.csv')"],"metadata":{"id":"ABanApX4XcEU","executionInfo":{"status":"ok","timestamp":1713364579558,"user_tz":-120,"elapsed":12,"user":{"displayName":"Paweł Leszczyński","userId":"09579002163402024035"}}},"execution_count":55,"outputs":[]},{"cell_type":"code","source":["df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"PbZzoJqgXqz2","executionInfo":{"status":"ok","timestamp":1713364579558,"user_tz":-120,"elapsed":12,"user":{"displayName":"Paweł Leszczyński","userId":"09579002163402024035"}},"outputId":"154ea95b-f97d-42a5-e801-6e0090ccea49"},"execution_count":56,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        PSU     O2  temp.    SS    DOC    TPOC  Windspeedinsitu  Depth  \\\n","0  3.757624   9.46   18.3  52.0  7.500  8.5650              3.5    3.3   \n","1  3.504707   9.89   19.1  50.0  7.860  8.5200              0.0    3.6   \n","2  3.757624   9.66   18.1  59.0  8.172  8.4915              1.0    3.4   \n","3  3.107266  10.36   19.5  46.0  7.848  8.8320              0.0    2.9   \n","4  2.619498  11.56   19.0  42.0  7.536  9.2400              0.0    3.0   \n","\n","            Years  \n","0  Year_weak_wind  \n","1  Year_weak_wind  \n","2  Year_weak_wind  \n","3  Year_weak_wind  \n","4  Year_weak_wind  "],"text/html":["\n","  <div id=\"df-51723882-8065-4f51-bf8d-fa82dd02ab72\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PSU</th>\n","      <th>O2</th>\n","      <th>temp.</th>\n","      <th>SS</th>\n","      <th>DOC</th>\n","      <th>TPOC</th>\n","      <th>Windspeedinsitu</th>\n","      <th>Depth</th>\n","      <th>Years</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>3.757624</td>\n","      <td>9.46</td>\n","      <td>18.3</td>\n","      <td>52.0</td>\n","      <td>7.500</td>\n","      <td>8.5650</td>\n","      <td>3.5</td>\n","      <td>3.3</td>\n","      <td>Year_weak_wind</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>3.504707</td>\n","      <td>9.89</td>\n","      <td>19.1</td>\n","      <td>50.0</td>\n","      <td>7.860</td>\n","      <td>8.5200</td>\n","      <td>0.0</td>\n","      <td>3.6</td>\n","      <td>Year_weak_wind</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3.757624</td>\n","      <td>9.66</td>\n","      <td>18.1</td>\n","      <td>59.0</td>\n","      <td>8.172</td>\n","      <td>8.4915</td>\n","      <td>1.0</td>\n","      <td>3.4</td>\n","      <td>Year_weak_wind</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3.107266</td>\n","      <td>10.36</td>\n","      <td>19.5</td>\n","      <td>46.0</td>\n","      <td>7.848</td>\n","      <td>8.8320</td>\n","      <td>0.0</td>\n","      <td>2.9</td>\n","      <td>Year_weak_wind</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2.619498</td>\n","      <td>11.56</td>\n","      <td>19.0</td>\n","      <td>42.0</td>\n","      <td>7.536</td>\n","      <td>9.2400</td>\n","      <td>0.0</td>\n","      <td>3.0</td>\n","      <td>Year_weak_wind</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-51723882-8065-4f51-bf8d-fa82dd02ab72')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-51723882-8065-4f51-bf8d-fa82dd02ab72 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-51723882-8065-4f51-bf8d-fa82dd02ab72');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-99eb18a9-a83f-4bac-8cd6-a9045258b309\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-99eb18a9-a83f-4bac-8cd6-a9045258b309')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-99eb18a9-a83f-4bac-8cd6-a9045258b309 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 120,\n  \"fields\": [\n    {\n      \"column\": \"PSU\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.6511602428504939,\n        \"min\": 1.4,\n        \"max\": 4.6,\n        \"num_unique_values\": 69,\n        \"samples\": [\n          3.9563445,\n          3.757624,\n          4.08\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"O2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.9064510628885404,\n        \"min\": 8.42,\n        \"max\": 12.89,\n        \"num_unique_values\": 94,\n        \"samples\": [\n          10.78,\n          9.16,\n          9.7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"temp.\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.6705862300859953,\n        \"min\": 10.9,\n        \"max\": 20.7,\n        \"num_unique_values\": 46,\n        \"samples\": [\n          16.3,\n          18.9,\n          19.6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SS\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 32.426830087935215,\n        \"min\": 42.0,\n        \"max\": 217.5,\n        \"num_unique_values\": 87,\n        \"samples\": [\n          88.75,\n          52.0,\n          91.25\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"DOC\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.008902822362981,\n        \"min\": 6.48,\n        \"max\": 10.86,\n        \"num_unique_values\": 107,\n        \"samples\": [\n          7.891,\n          7.37,\n          7.536\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"TPOC\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.209982154389462,\n        \"min\": 6.38,\n        \"max\": 17.42,\n        \"num_unique_values\": 117,\n        \"samples\": [\n          12.44,\n          9.24,\n          17.42\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Windspeedinsitu\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.788882365023375,\n        \"min\": 0.0,\n        \"max\": 11.5,\n        \"num_unique_values\": 31,\n        \"samples\": [\n          10.2,\n          6.5,\n          6.7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Depth\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.5532157075206913,\n        \"min\": 1.5,\n        \"max\": 3.9,\n        \"num_unique_values\": 22,\n        \"samples\": [\n          3.3,\n          2.5,\n          3.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Years\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Year_strong_wind\",\n          \"Year_weak_wind\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":56}]},{"cell_type":"code","source":["decClass=df.columns[df.shape[1]-1]\n","print(decClass)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"PeWZ1YpZXsCK","executionInfo":{"status":"ok","timestamp":1713364579559,"user_tz":-120,"elapsed":10,"user":{"displayName":"Paweł Leszczyński","userId":"09579002163402024035"}},"outputId":"91a08ad7-b8f1-4e28-a002-183ad6c321db"},"execution_count":57,"outputs":[{"output_type":"stream","name":"stdout","text":["Years\n"]}]},{"cell_type":"code","source":["df.groupby(decClass).size()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"PD52ypWYYIus","executionInfo":{"status":"ok","timestamp":1713364579559,"user_tz":-120,"elapsed":8,"user":{"displayName":"Paweł Leszczyński","userId":"09579002163402024035"}},"outputId":"feffd620-8187-43c2-ed25-5aa4b44c0ed2"},"execution_count":58,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Years\n","Year_strong_wind    56\n","Year_weak_wind      64\n","dtype: int64"]},"metadata":{},"execution_count":58}]},{"cell_type":"code","source":["strong= df[df.Years=='Year_strong_wind']\n","weak= df[df.Years=='Year_weak_wind']"],"metadata":{"id":"lO5hsxxIYkAT","executionInfo":{"status":"ok","timestamp":1713364579559,"user_tz":-120,"elapsed":7,"user":{"displayName":"Paweł Leszczyński","userId":"09579002163402024035"}}},"execution_count":59,"outputs":[]},{"cell_type":"code","source":["plt.title('Weak vs Strong wind years')\n","plt.xlabel('SS')\n","plt.ylabel('Depth')\n","plt.scatter(strong.SS, strong.Depth, color='red', label='Strong', alpha=0.3)\n","plt.scatter(weak.SS, weak.Depth, color='blue', label='Weak', alpha=0.3)\n","plt.legend()\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":472},"id":"EG2y2gJjYzmr","executionInfo":{"status":"ok","timestamp":1713364579986,"user_tz":-120,"elapsed":433,"user":{"displayName":"Paweł Leszczyński","userId":"09579002163402024035"}},"outputId":"ed610070-21e7-494f-9079-40ff50916882"},"execution_count":60,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["df.Years=[1 if i  == 'Year_strong_wind' else 0 for i in df.Years]"],"metadata":{"id":"5D2LM39FZfLl","executionInfo":{"status":"ok","timestamp":1713364579986,"user_tz":-120,"elapsed":18,"user":{"displayName":"Paweł Leszczyński","userId":"09579002163402024035"}}},"execution_count":61,"outputs":[]},{"cell_type":"code","source":["print(df.Years )"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZmTJzdG5enme","executionInfo":{"status":"ok","timestamp":1713364579986,"user_tz":-120,"elapsed":18,"user":{"displayName":"Paweł Leszczyński","userId":"09579002163402024035"}},"outputId":"85a36421-de00-46d8-b8c6-26fe1fc71577"},"execution_count":62,"outputs":[{"output_type":"stream","name":"stdout","text":["0      0\n","1      0\n","2      0\n","3      0\n","4      0\n","      ..\n","115    1\n","116    1\n","117    1\n","118    1\n","119    1\n","Name: Years, Length: 120, dtype: int64\n"]}]},{"cell_type":"code","source":["df.Years"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vls38QRbbBAV","executionInfo":{"status":"ok","timestamp":1713364579986,"user_tz":-120,"elapsed":16,"user":{"displayName":"Paweł Leszczyński","userId":"09579002163402024035"}},"outputId":"2f0ee81e-59eb-48ee-c5fc-2e8c7188dc3a"},"execution_count":63,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0      0\n","1      0\n","2      0\n","3      0\n","4      0\n","      ..\n","115    1\n","116    1\n","117    1\n","118    1\n","119    1\n","Name: Years, Length: 120, dtype: int64"]},"metadata":{},"execution_count":63}]},{"cell_type":"code","source":["x= df.drop(['Years'], axis=1)\n","y=df.Years.values"],"metadata":{"id":"dZZb4Y--a9_t","executionInfo":{"status":"ok","timestamp":1713364579987,"user_tz":-120,"elapsed":16,"user":{"displayName":"Paweł Leszczyński","userId":"09579002163402024035"}}},"execution_count":64,"outputs":[]},{"cell_type":"code","source":["x=(x-np.min(x)) / (np.max(x) - np.min(x))"],"metadata":{"id":"cYhFa6KRbO71","executionInfo":{"status":"ok","timestamp":1713364579987,"user_tz":-120,"elapsed":15,"user":{"displayName":"Paweł Leszczyński","userId":"09579002163402024035"}}},"execution_count":65,"outputs":[]},{"cell_type":"code","source":["x_train, x_test, y_train, y_test= train_test_split(x,y, test_size=0.3, random_state=42)"],"metadata":{"id":"RS2IOTIqbZwu","executionInfo":{"status":"ok","timestamp":1713364579987,"user_tz":-120,"elapsed":15,"user":{"displayName":"Paweł Leszczyński","userId":"09579002163402024035"}}},"execution_count":66,"outputs":[]},{"cell_type":"code","source":["nb= GaussianNB()\n","nb.fit(x_train, y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":75},"id":"eysyjCnIbr-s","executionInfo":{"status":"ok","timestamp":1713364579987,"user_tz":-120,"elapsed":15,"user":{"displayName":"Paweł Leszczyński","userId":"09579002163402024035"}},"outputId":"a742256e-4fd2-45b5-988a-6a5359cb807a"},"execution_count":67,"outputs":[{"output_type":"execute_result","data":{"text/plain":["GaussianNB()"],"text/html":["<style>#sk-container-id-4 {color: black;background-color: white;}#sk-container-id-4 pre{padding: 0;}#sk-container-id-4 div.sk-toggleable {background-color: white;}#sk-container-id-4 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-4 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-4 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-4 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-4 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-4 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-4 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-4 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-4 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-4 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-4 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-4 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-4 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-4 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-4 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-4 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-4 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-4 div.sk-item {position: relative;z-index: 1;}#sk-container-id-4 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-4 div.sk-item::before, #sk-container-id-4 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-4 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-4 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-4 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-4 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-4 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-4 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-4 div.sk-label-container {text-align: center;}#sk-container-id-4 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-4 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-4\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>GaussianNB()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-4\" type=\"checkbox\" checked><label for=\"sk-estimator-id-4\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">GaussianNB</label><div class=\"sk-toggleable__content\"><pre>GaussianNB()</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":67}]},{"cell_type":"code","source":["print('Naive Bayes score: ', nb.score(x_test,y_test))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6-QmyIGBb8n5","executionInfo":{"status":"ok","timestamp":1713364579988,"user_tz":-120,"elapsed":15,"user":{"displayName":"Paweł Leszczyński","userId":"09579002163402024035"}},"outputId":"d9efd7e6-5b29-40ac-e988-6b59b5eac0f7"},"execution_count":68,"outputs":[{"output_type":"stream","name":"stdout","text":["Naive Bayes score:  0.8888888888888888\n"]}]},{"cell_type":"code","source":["yPred=nb.predict(x_test)\n","print(yPred)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vCGWdHwLdl4u","executionInfo":{"status":"ok","timestamp":1713364579988,"user_tz":-120,"elapsed":13,"user":{"displayName":"Paweł Leszczyński","userId":"09579002163402024035"}},"outputId":"7adb80e6-e844-45af-8b9c-4e11df667f80"},"execution_count":69,"outputs":[{"output_type":"stream","name":"stdout","text":["[0 0 0 0 0 1 1 1 0 1 0 0 1 0 1 1 1 1 1 1 1 0 0 1 0 0 0 1 1 1 0 1 0 0 0 1]\n"]}]},{"cell_type":"code","source":["print(y_test)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xYq-3gTNegG2","executionInfo":{"status":"ok","timestamp":1713364579988,"user_tz":-120,"elapsed":12,"user":{"displayName":"Paweł Leszczyński","userId":"09579002163402024035"}},"outputId":"695199fc-73d0-4140-fdb7-cfce609ff631"},"execution_count":70,"outputs":[{"output_type":"stream","name":"stdout","text":["[0 0 0 0 0 1 1 0 0 1 0 0 0 0 1 1 1 0 1 1 1 0 0 1 0 0 0 1 1 1 0 1 0 1 0 1]\n"]}]}]}